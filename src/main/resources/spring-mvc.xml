<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                            http://www.springframework.org/schema/context    
                            http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                            http://www.springframework.org/schema/mvc    
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<import resource="spring-memcached.xml" />
	<mvc:annotation-driven />
	<mvc:default-servlet-handler />
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.jxpskj.yiqi.controller" />
	<context:component-scan base-package="com.jxpskj.auth.controller" />
	<context:component-scan base-package="com.jxpskj.yiqi.api" />
	<context:component-scan base-package="com.jxpskj.auth.api" />

	<aop:aspectj-autoproxy />
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>


	<bean id="jobBean" class="com.jxpskj.yiqi.service.QuartzListenter" />
	<bean id="jobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="jobBean" />
		<property name="targetMethod" value="execute" />
		<!-- 将并发设置为false -->
		<property name="concurrent" value="false" />
	</bean>

	<bean id="trigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetail" />
		<!-- 表达式，我的是每 10s 执行一次 -->
		<property name="cronExpression" value="0 57 23 * * ?" />
	</bean>

	<!-- 总管理类如果将lazy-init='false'那么容器启动就会执行调度程序 -->
	<bean id="startQuertz"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		lazy-init="false">
		<property name="triggers">
			<list>
				<!-- 作业调度器,list下可加入其他的调度器 -->
				<ref bean="trigger" />
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
			</list>
		</property>
	</bean>

	<!-- 对静态资源文件的访问 restful -->
	<mvc:resources mapping="/ashx/**" location="/,/ashx/" />
	<mvc:resources mapping="/admincss/**" location="/,/page/admin/css/" />
	<mvc:resources mapping="/adminimg/**" location="/,/page/admin/image/" />
	<mvc:resources mapping="/adminjs/**" location="/,/page/admin/js/" />
	<mvc:resources mapping="/public/**" location="/,/page/public/" />
	<mvc:resources mapping="/layer/**" location="/,/layer/" />
	<mvc:resources mapping="/fonts/**" location="/,/page/admin/fonts/" />
	<mvc:resources mapping="/Hui-iconfont/**" location="/,/Hui-iconfont/" />
	<mvc:resources mapping="/loaMap/**" location="/,/page/loaMap/" />
	<mvc:resources mapping="/qyrzcss/**" location="/,/page/qyrz/css/" />
	<mvc:resources mapping="/qyrzimg/**" location="/,/page/qyrz/img/" />
	<mvc:resources mapping="/qyrzjs/**" location="/,/page/qyrz/js/" />

	<mvc:resources mapping="/icheck/**" location="/,/icheck/" />
	<mvc:resources mapping="/Validform/**" location="/,/Validform/" />

	<!--访问拦截 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**/**" />
			<mvc:exclude-mapping path="/login/findLogin" />
			<mvc:exclude-mapping path="/login/logout" />
			<mvc:exclude-mapping path="/QRCode/**" />
			<mvc:exclude-mapping path="/coreServlet" />
			<mvc:exclude-mapping path="/admincss/**" />
			<mvc:exclude-mapping path="/adminimg/**" />
			<mvc:exclude-mapping path="/qyrzcss/**" />
			<mvc:exclude-mapping path="/qyrzjs/**" />
			<mvc:exclude-mapping path="/qyrzimg/**" />
			<mvc:exclude-mapping path="/user/login" />
			<mvc:exclude-mapping path="/user/logout" />
			<mvc:exclude-mapping path="/company/addCompanyInfo" />
			<mvc:exclude-mapping path="/company/uploadCompanyInfoPic" />
			<mvc:exclude-mapping path="/company/deleteCompanyInfoPic" />

			<mvc:exclude-mapping path="/public/**" />
			<mvc:exclude-mapping path="/adminjs/**" />
			<mvc:exclude-mapping path="/upload/**" />
			<mvc:exclude-mapping path="/api/**" />
			<mvc:exclude-mapping path="/page/ashx/**" />
			<mvc:exclude-mapping path="/page/css/**" />
			<mvc:exclude-mapping path="/page/img/**" />
			<mvc:exclude-mapping path="/page/js/**" />
			<mvc:exclude-mapping path="/page/layer/**" />
			<mvc:exclude-mapping path="/page/fonts/**" />
			<mvc:exclude-mapping path="/page/Hui-iconfont/**" />
			<mvc:exclude-mapping path="/page/icheck/**" />
			<mvc:exclude-mapping path="/page/Validform/**" />
			<mvc:exclude-mapping path="/source/**" />
			<mvc:exclude-mapping path="/404.htm" />
			<mvc:exclude-mapping path="/page/qyrz/**" />
			<bean class="com.jxpskj.yiqi.interceptor.LoginHandlerInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>


	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/page/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>

</beans>  